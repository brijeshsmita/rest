Added new Exception Provider class
@Provider
public class RestExceptionProvider implements ExceptionMapper<EmployeeException> {

       @Override
       public Response toResponse(EmployeeException exception) {
             
             return Response.status(Response.Status.NOT_FOUND)
                                 .entity("Error Occurred: "+exception.getMessage())
                                 .build();
       }

}

Modified DAO Method:
@Override
       public Employee getEmployee(String empNo) throws EmployeeException {
             Employee emp = empMap.get(empNo);
             if(emp==null) {
                    throw new EmployeeException("Employee not found!");
             }
             return emp;
       }

Modified User defined exception:
public class EmployeeException extends RuntimeException {

       private static final long serialVersionUID = 1L;

       public EmployeeException() {
             super();
             // TODO Auto-generated constructor stub
       }

       public EmployeeException(String message) {
             super(message);
             // TODO Auto-generated constructor stub
       }

}

Remove try..catch block for Employee Exception (EmployeeRestController.java)
  @GET
    @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })
    public List<Employee> getEmployees_JSON() {
        List<Employee> listOfCountries=null;
             listOfCountries = employeeService.getAllEmployees();
        return listOfCountries;
    }
    @GET
    @Path("/{empNo}")
    @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })
    public Employee getEmployee(@PathParam("empNo") String empNo) {
       Employee employee=null;
        //DO NOT HANDLE EXCEPTION
       employee= employeeService.getEmployee(empNo);
             return employee;
    }
